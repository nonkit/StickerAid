' StickerAid
version = "0.0.4b"
' Copyright © 2022 Facilitation LINE Sticker Team.  The MIT License.
' Using LitDev Extension

Init()
lang = "ja"
InitLang()
InitMenu()

While "True"
  If menuClicked Then
    If LDControls.LastMenuItem = txt["Open"] Then
      OpenZip()
      GetImages()
      DrawImages()
    ElseIf LDControls.LastMenuItem = txt["Save"] Then
      SaveZip()
    ElseIf LDControls.LastMenuItem = txt["Exit"] Then
      InitTemp()
      Program.End()
    ElseIf LDControls.LastMenuItem = txt["About"] Then
      GraphicsWindow.ShowMessage(about, txt["About"])
    EndIf
    menuClicked = "False"
  Else
    Program.Delay(200)
  EndIf
EndWhile

Sub DrawImages
  ' main image: ms x ms [px]
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.FillRectangle(gap, mh + gap, ms, ms)
  GraphicsWindow.PenWidth = 1
  GraphicsWindow.PenColor = "DimGray"
  GraphicsWindow.BrushColor = "Transparent"
  mf = Shapes.AddRectangle(ms, ms)
  Shapes.Move(mf, gap, mh + gap)
  qw = ms / 2
  qh = Math.Round(qw * 320 / 370)
  dy = qw - qh
  If img["main"] <> "" Then
    x = gap 
    y = mh + gap
    GraphicsWindow.DrawResizedImage(img["main"], x, y, ms, ms)
  EndIf
  ' tab image: tw x th [px]
  tw = 96       ' tab
  th = 74
  GraphicsWindow.BrushColor = "White"
  GraphicsWindow.FillRectangle(gap * 2 + ms, mh + gap, tw, th)
  GraphicsWindow.PenWidth = 1
  GraphicsWindow.PenColor = "DimGray"
  GraphicsWindow.BrushColor = "Transparent"
  tf = Shapes.AddRectangle(tw, th)
  Shapes.Move(tf, gap * 2 + ms, mh + gap)
  If img["tab"] <> "" Then
    x = gap * 2 + ms
    y = mh + gap
    _tw = Math.Round(th / sh * sw)
    dx = (tw - _tw) / 2
    GraphicsWindow.DrawResizedImage(img["tab"], x, y, tw, th)
  EndIf
  ' sticker image: sw x sh --> (resized) _sw x _sh [px]
  GraphicsWindow.BrushColor = "LightGray"
  GraphicsWindow.FillRectangle(gap, mh + ms + gap * 2, _sw * 8, _sh * 5)
  For i = 1 To 40
    x = gap + Math.Remainder(i - 1, 8) * _sw
    y = mh + ms + gap * 2 + Math.Floor((i - 1) / 8) * _sh
    GraphicsWindow.DrawRectangle(x, y, _sw, _sh)
    If i <= n Then
      If 9 < i Then
        name = i + ".png"
      Else
        name = Text.Append(0, i + ".png")
      EndIf
      GraphicsWindow.DrawResizedImage(directory + "\" + name, x, y, _sw, _sh)
    EndIf  
  EndFor
EndSub

Sub GetImages
  files = File.GetFiles(directory)
  img = ""
  n = 0
  For i = 1 To Array.GetItemCount(files)
    If Text.EndsWith(files[i], "main.png") Then
      img["main"] = ImageList.LoadImage(files[i])
    ElseIf Text.EndsWith(files[i], "tab.png") Then
      img["tab"] = ImageList.LoadImage(files[i])
    Else
      n = n + 1
      img[n] = ImageList.LoadImage(files[i])
    EndIf
  EndFor
EndSub

Sub Init
  Not = "False=True;True=False;"
  LF = Text.GetCharacter(10)
  gw = 600
  gh = 600
  GraphicsWindow.Width = gw
  GraphicsWindow.Height = gh
  GraphicsWindow.BackgroundColor = "LightGray"
  title = "StickerAid v" + version
  GraphicsWindow.Title = title
  sw = 370      ' sticker
  sh = 320
  _sw = sw / 5  ' thumbnail
  _sh = sh / 5
  ms = 240      ' main
  gap = 4
  path = Program.Directory
  directory = LDFile.TempFolder + "\StickerAid"
EndSub

Sub InitLang
  If lang = "ja" Then
    txt["team"] = "ファシリテーションLINEスタンプ部"
    txt["and"] = "と"
    txt["confirm"] = "%1 を" + LF + "上書き保存しますか？"
    txt["File"] = "ファイル"
    txt["Open"] = "開く"
    txt["Save"] = "保存"
    txt["Exit"] = "終了"
    txt["Help"] = "ヘルプ"
    txt["About"] = "バージョン情報"
  Else
    txt["team"] = "Facilitation LINE Sticker Team"
    txt["and"] = "and"
    txt["confirm"] = "Are you sure to rewrite" + LF + "%1?"
    txt["File"] = "File"
    txt["Open"] = "Open"
    txt["Save"] = "Save"
    txt["Exit"] = "Exit"
    txt["Help"] = "Help"
    txt["About"] = "About"
  EndIf
  about = title + LF + LF
  about = about + "Copyright © 2022" + LF
  about = about + txt["team"] + "." + LF
  about = about + "The MIT License."
EndSub

Sub InitMenu
  ' menu
  mh = 20
  menuList[txt["File"]] = "Main"
  menuList[txt["Open"]] = txt["File"]
  menuList[txt["Save"]] = txt["File"]
  menuList["-"] = txt["File"]
  menuList[txt["Exit"]] = txt["File"]
  menuList[txt["Help"]] = "Main"
  menuList[txt["About"]] = txt["Help"]
  GraphicsWindow.BrushColor = "Black"
  GraphicsWindow.FontBold = "False"
  GraphicsWindow.FontSize = mh * 0.7
  LDControls.AddMenu(gw, mh, menuList, "", "")
  LDControls.MenuClicked = OnMenuClicked
EndSub

Sub InitTemp
  temp = LDFile.TempFolder + "\StickerAid"
  If LDFile.Exists(temp) Then
    dirs = File.GetDirectories(temp)
    nDirs = Array.GetItemCount(dirs)
    If 0 < nDirs Then
      For i = 1 To nDirs
        File.DeleteDirectory(dirs[i])
      EndFor
    EndIf
  Else
    File.CreateDirectory(temp)
  EndIf
EndSub

Sub OnMenuClicked
  menuClicked = "True"
EndSub

Sub OpenZip
  zipFile = LDDialogs.OpenFile("zip", path)
  If zipFile <> "" Then
    InitTemp()
    time = LDText.Replace(Clock.Time, ":", "")
    If Text.GetLength(time) < 6 Then
      time = Text.Append(0, time)
    EndIf
    timestamp = LDText.Replace(Clock.Date, "/", "") + "-" + time
    directory = temp + "\" + timestamp
    LDZip.UnZip(zipFile, directory)
  EndIf
EndSub

Sub SaveZip
  exMain = LDFile.Exists(directory + "\main.png")
  exTab = LDFile.Exists(directory + "\tab.png")
  If exMain Then
    If exTab Then
      targets = "main.png " + txt["and"] + " tab.png"
    Else
      targets = "main.png"
    EndIf
  Else
    If exTab Then
      targets = "tab.png"
    Else
      targets = ""
    EndIf
  EndIf
  If exMain Or exTab Then
    confirm = LDText.Replace(txt["confirm"], "%1", targets)
    save = LDDialogs.Confirm(confirm, txt["Save"])
  Else
    save = "Yes"
  EndIf
  If save = "Yes" Then
    Shapes.HideShape(mf)
    Shapes.HideShape(tf)
    imgM = LDGraphicsWindow.Capture("", "False")
    LDImage.Crop(imgM, gap, mh + gap, ms, ms)
    imgT = LDGraphicsWindow.Capture("", "False")
    LDImage.Crop(imgT, gap * 2 + ms, mh + gap, tw, th)
    Shapes.ShowShape(mf)
    Shapes.ShowShape(tf)
    LDImage.SaveAs(imgM, directory + "\main.png")
    LDImage.SaveAs(imgT, directory + "\tab.png")
    files = File.GetFiles(directory)
    LDZip.Zip(zipFile, files)
  EndIf
EndSub
